#python:
from gprMax.input_cmd_funcs import *
import random

def add_random_sphere(x_min, y_min, x_max, y_max, r_min, r_max, height, mat):
	
	x = random.uniform(x_min, x_max)
	y = random.uniform(y_min, y_max)
	r = random.uniform(r_min, r_max)

	cylinder(x, y, 0, x, y, height, r, mat)

SPACE_STEP = 0.01
T_WINDOW = 30e-9

XXX = 5
YYY = 2
ZZZ = 1.5

PML_MARGIN = 0.5
ROUGH = 0.05

domain(XXX + 2 * PML_MARGIN, YYY + 2 * PML_MARGIN, ZZZ)
dx_dy_dz(SPACE_STEP, SPACE_STEP, SPACE_STEP)
time_window(T_WINDOW)

GND_Y = 1

soil_peplinski(0.5, 0.5, 2.0, 2.66, 0.001, 0.020, 'my_soil')
fractal_box(0, 0, 0,
			XXX + 2 * PML_MARGIN, GND_Y + PML_MARGIN, ZZZ,
			1.5,
			1, 1, 1,
			20, 'my_soil',
			'my_soil_box'
			)
add_surface_roughness(
			0, GND_Y + PML_MARGIN, 0,
			XXX + 2 * PML_MARGIN, GND_Y + PML_MARGIN, ZZZ,
			1.5,
			1, 1,
			PML_MARGIN + GND_Y - ROUGH, PML_MARGIN + GND_Y + ROUGH,
			'my_soil_box'
			)

material(
		10,
		10e6,
		1,
		0,
		'metal'
		)

material(
		8,
		1e-6,
		1,
		0,
		'rock'
		)

material(
		80,
		1e-6,
		1,
		0,
		'water'
)

#add random rocks
#for i in range(20):
#
#	add_random_sphere(PML_MARGIN, PML_MARGIN, PML_MARGIN + XXX, PML_MARGIN + GND_Y - 0.2, 0.08, 0.2, ZZZ, 'rock')

DEPTH = 0.35937050342222965 #0.1-0.4
DIM_OBJ1 = 0.127924368576669 #0.1-0.3
center = (2 * PML_MARGIN + XXX) / 2 + -0.3215167737024345
box(
	center - DIM_OBJ1 / 2, GND_Y - DEPTH - DIM_OBJ1 + PML_MARGIN, 0,
	center + DIM_OBJ1 / 2, GND_Y - DEPTH + PML_MARGIN, ZZZ,
	'metal'
)

#DEPTH = 0.2
#DIM_OBJ1 = 0.1
#X_OFFSET = 1
#center = (2 * PML_MARGIN + XXX) / 2
#box(
#	center - DIM_OBJ1 / 2 + X_OFFSET, GND_Y - DEPTH - DIM_OBJ1 + PML_MARGIN, 0,
#	center + DIM_OBJ1 / 2 + X_OFFSET, GND_Y - DEPTH + PML_MARGIN, ZZZ,
#	'metal'
#)

waveform(
		'gaussian',
		1,
		200e6,
		'my_source'
		)



if current_model_run == 1:
	geometry_view(
		0, 0, 0,
		XXX + 2 * PML_MARGIN, YYY + 2 * PML_MARGIN, ZZZ,
		SPACE_STEP, SPACE_STEP, SPACE_STEP,
		'geometry'
		)

#end_python: